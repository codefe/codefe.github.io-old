{"sta":1,"data":{"subTitle":"原型优化","content":"<p>通过原型优化方法定义。</p><ul><li>如果一个方法类型将被频繁构造，通过方法原型从外面定义附加方法，从而避免方法的重复定义。</li><li>可以通过外部原型的构造方式初始化值类型的变量定义。（这里强调值类型的原因是，引用类型如果在原型中定义，一个实例对引用类型的更改会影响到其他实例。）<ul><li>这条规则中涉及到<code>JAVASCRIPT</code>中原型的概念，构造函数都有一个<code>prototype</code>属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。可以把那些不变的属性和方法，直接定义在<code>prototype</code>对象上。<ul><li>可以通过对象实例访问保存在原型中的值。</li><li>不能通过对象实例重写原型中的值。</li><li>在实例中添加一个与实例原型同名属性，那该属性就会屏蔽原型中的属性。</li><li>通过delete操作符可以删除实例中的属性。</li></ul></li></ul></li></ul>"}}