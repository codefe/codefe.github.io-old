{"sta":1,"data":{"subTitle":"使用JavaScript原生API","content":"<p>随着更高版本JavaScript的普及, 像<a target=\"_blank\" href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array#Methods\">Array prototype新增了很多API</a>都可以在大多数浏览器中直接使用.例如:</p><pre><code>// give me a new array of all values multiplied by 10\n[5, 6, 7, 8, 900].map(function (value) {\n  return value * 10;\n});\n// [50, 60, 70, 80, 9000]\n\n// create links to specs and drop them into #links.\nvar linksList = document.querySelector('#links');\nvar links = [];\n['html5', 'css3', 'webgl'].forEach(function (value) {\n\n  links.push(value.link('http://google.com/search?btnI=1&amp;q=' + value + ' spec'));\n});\nlinksList.innerHTML = links.join('');\n\n// return a new array of all mathematical constants under 2\n[3.14, 2.718, 1.618].filter(function (number) {\n  return number &lt; 2;\n});\n\n// you can also use these extras on other collections link nodeLists\n[].forEach.call(document.querySelectorAll('section[data-bucket]'),\n  function (elem, i) {\n    localStorage['bucket' + i] = elem.getAttribute('data-bucket');\n});\n</code></pre><p>通常情况下这些原生方法比手动编写循环要快:</p><pre><code>for (var i = 0, len = arr.length; i &lt; len; ++i) {\n}\n</code></pre><p>使用原生<code>JSON.parse()</code>比<code>json2.js</code>更加高效,安全.</p><p>原生的<code>String.prototype.trim</code>也是一个很好的例子, 这些功能不是HTML5中的,也应该得到广泛的应用.</p>"}}