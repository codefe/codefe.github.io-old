{"sta":1,"data":{"subTitle":"ExtractTextWebpackPlugin","content":"<h3>安装</h3><pre><code>npm <span>install</span> --save-dev extract-text-webpack-plugin\n</code></pre><h3>使用</h3><blockquote><p>:警告: 如果使用 针对 webpack 1 的版本, 请看<span>&nbsp;</span><a href=\"https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md\" target=\"_blank\">分支 webpack-1 的文档</a>.</p></blockquote><pre><code><span>const</span> ExtractTextPlugin <span>=</span> <span>require</span><span>(</span><span>\"extract-text-webpack-plugin\"</span><span>)</span><span>;</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  module<span>:</span> <span>{</span>\n    rules<span>:</span> <span>[</span>\n      <span>{</span>\n        test<span>:</span> <span>/\\.css$/</span><span>,</span>\n        use<span>:</span> ExtractTextPlugin<span>.</span><span>extract</span><span>(</span><span>{</span>\n          fallback<span>:</span> <span>\"style-loader\"</span><span>,</span>\n          use<span>:</span> <span>\"css-loader\"</span>\n        <span>}</span><span>)</span>\n      <span>}</span>\n    <span>]</span>\n  <span>}</span><span>,</span>\n  plugins<span>:</span> <span>[</span>\n    <span>new</span> <span>ExtractTextPlugin</span><span>(</span><span>\"styles.css\"</span><span>)</span><span>,</span>\n  <span>]</span>\n<span>}</span>\n</code></pre><p>它会将所有的 入口chunk (entry chunks) 中的<span>&nbsp;</span><code>require(\"style.css\")</code><span>&nbsp;</span>移动到分开的 css 文件。因此，你的样式不再内联到 javascript 里面，但会放到一个单独的 css 包文件 (<code>styles.css</code>)当中。 如果你的样式文件大小较大，这会更快，因为样式文件会跟 javascript 包并行加载。</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>更少 style 标签 (旧版本的 IE 浏览器有限制)</td><td>额外的 HTTP 请求</td></tr><tr><td>CSS SourceMap (使用<span>&nbsp;</span><code>devtool: \"source-map\"</code><span>&nbsp;</span>和<span>&nbsp;</span><code>css-loader?sourceMap</code><span>&nbsp;</span>配置)</td><td>更长的编译时间</td></tr><tr><td>CSS 请求并行</td><td>没有运行时的公共路径修改</td></tr><tr><td>CSS 单独缓存</td><td>没有热替换</td></tr><tr><td>更快的浏览器运行时 (更少代码和 DOM 的运行)</td><td>...</td></tr></tbody></table><h3>配置</h3><pre><code><span>new</span> <span>ExtractTextPlugin</span><span>(</span>options<span>:</span> filename <span>|</span> object<span>)</span>\n</code></pre><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><strong><code>id</code></strong></td><td><code>{String}</code></td><td>此插件实例的唯一id。 （仅限高级用途，默认情况下自动生成）</td></tr><tr><td><strong><code>filename</code></strong></td><td><code>{String}</code></td><td><em>(必填)</em><span>&nbsp;</span>生成文件的文件名。会包含<span>&nbsp;</span><code>[name]</code>,<span>&nbsp;</span><code>[id]</code><span>&nbsp;</span>和<span>&nbsp;</span><code>[contenthash]</code></td></tr><tr><td><strong><code>options.allChunks</code></strong></td><td><code>{Boolean}</code></td><td>向所有额外的 chunk 提取（默认只提取初始加载模块）</td></tr><tr><td><strong><code>options.disable</code></strong></td><td><code>{Boolean}</code></td><td>禁用插件</td></tr><tr><td><strong><code>options.ignoreOrder</code></strong></td><td><code>{Boolean}</code></td><td>禁用顺序检查 (对 CSS Modules 有用!), 默认<span>&nbsp;</span><code>false</code></td></tr></tbody></table><ul><li><code>[name]</code><span>&nbsp;</span>chunk 的名称</li><li><code>[id]</code><span>&nbsp;</span>chunk 的数量</li><li><code>[contenthash]</code><span>&nbsp;</span>提取文件根据内容生成的哈希</li></ul><blockquote><p>:警告:<span>&nbsp;</span><code>ExtractTextPlugin</code><span>&nbsp;</span>对<span>&nbsp;</span><strong>每个入口<span>&nbsp;</span><code>chunk</code><span>&nbsp;</span></strong>都生成对应的一个文件, 所以当你配置多个入口<span>&nbsp;</span><code>chunk</code><span>&nbsp;</span>的时候，你必须使用<span>&nbsp;</span><code>[name]</code>,<span>&nbsp;</span><code>[id]</code><span>&nbsp;</span>or<span>&nbsp;</span><code>[contenthash]</code>.</p></blockquote><h4 id=\"extract\"><code>#extract</code></h4><pre><code>ExtractTextPlugin<span>.</span><span>extract</span><span>(</span>options<span>:</span> loader <span>|</span> object<span>)</span>\n</code></pre><p>从一个已存在的加载器 (<code>loader</code>) 中创建一个 提取 (<code>extracting</code>) 加载器。支持这些加载器类型：<span>&nbsp;</span><code>{ loader: [name]-loader -&gt; {String}, options: {} -&gt; {Object} }</code>.</p><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><strong><code>options.use</code></strong></td><td><code>{String}</code>/<code>{Object}</code></td><td><em>(必填)</em>, 加载器 (<code>Loader</code>), 被用于将资源转换成一个输出的<span>&nbsp;</span><code>CSS</code><span>&nbsp;</span>模块</td></tr><tr><td><strong><code>options.fallback</code></strong></td><td><code>{String}</code>/<code>{Object}</code></td><td>加载器 (例如<span>&nbsp;</span><code>'style-loader'</code>), 应用于当 css 没有被提取(也就是一个额外的 chunk，当<span>&nbsp;</span><code>allChunks: false</code>)</td></tr><tr><td><strong><code>options.publicPath</code></strong></td><td><code>{String}</code></td><td>对加载器的<span>&nbsp;</span><code>publicPath</code><span>&nbsp;</span>配置重写</td></tr></tbody></table><h4 id=\"多个实例\">多个实例</h4><p>这也是一个 提取 (<code>extract</code>) 函数的实例。如果你有多于一个<span>&nbsp;</span><code>ExtractTextPlugin</code><span>&nbsp;</span>插件 你应使用这种办法。</p><pre><code><span>const</span> ExtractTextPlugin <span>=</span> <span>require</span><span>(</span><span>'extract-text-webpack-plugin'</span><span>)</span><span>;</span>\n\n<span spellcheck=\"true\">// 多个提取实例</span>\n<span>const</span> extractCSS <span>=</span> <span>new</span> <span>ExtractTextPlugin</span><span>(</span><span>'stylesheets/[name].css'</span><span>)</span><span>;</span>\n<span>const</span> extractLESS <span>=</span> <span>new</span> <span>ExtractTextPlugin</span><span>(</span><span>'stylesheets/[name].less'</span><span>)</span><span>;</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  module<span>:</span> <span>{</span>\n    use<span>:</span> <span>[</span>\n      <span>{</span>\n        test<span>:</span> <span>/\\.css$/</span><span>,</span>\n        use<span>:</span> extractCSS<span>.</span><span>extract</span><span>(</span><span>[</span> <span>'css-loader'</span><span>,</span> <span>'postcss-loader'</span> <span>]</span><span>)</span>\n      <span>}</span><span>,</span>\n      <span>{</span>\n        test<span>:</span> <span>/\\.html$/i</span><span>,</span>\n        use<span>:</span> extractLESS<span>.</span><span>extract</span><span>(</span><span>[</span> <span>'css-loader'</span><span>,</span> <span>'less-loader'</span> <span>]</span><span>)</span>\n      <span>}</span><span>,</span>\n    <span>]</span>\n  <span>}</span><span>,</span>\n  plugins<span>:</span> <span>[</span>\n    extractCSS<span>,</span>\n    extractLESS\n  <span>]</span>\n<span>}</span><span>;</span></code></pre>"}}