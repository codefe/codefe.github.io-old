{"sta":1,"data":{"subTitle":"UglifyjsWebpackPlugin","content":"<p>这个插件使用<span>&nbsp;</span><a href=\"https://github.com/mishoo/UglifyJS2\" target=\"_blank\">UglifyJS</a><span>&nbsp;</span>去压缩你的JavaScript代码。除了它从 webpack 中解耦之外，它和 webpack 核心插件 (<code>webpack.optimize.UglifyJSPlugin</code>) 是同一个插件。这允许你控制你正在使用的 UglifyJS 的版本。</p><blockquote><p>注意，webpack 在<span>&nbsp;</span><code>webpack.optimize.UglifyJsPlugin</code><span>&nbsp;</span>下包含相同的插件。对于那些想控制 UglifyJS 版本的开发者来说，这是一个独立的版本。除了这种情况下的安装说明，文档是有效的。</p></blockquote><h3>使用</h3><p>首先，安装这个插件:</p><pre><code>yarn add uglifyjs-webpack-plugin --dev\n</code></pre><p>..或者你坚持使用npm，而不是更先进的<span>&nbsp;</span><a href=\"https://yarnpkg.com/\" target=\"_blank\">Yarn</a>:</p><pre><code>npm <span>install</span> uglifyjs-webpack-plugin --save-dev\n</code></pre><p><strong>十分重要!</strong><span>&nbsp;</span>这个插件这个插件依赖 uglify-js，所以为了使用这个插件，也要安装 uglify-js。然而，目前 (2017/1/25) 可用的 uglify-js npm 包，不支持压缩 ES6 代码。为了支持 ES6，必须提供一个具有压缩 ES6 能力的版本，又称之为<span>&nbsp;</span><em>harmony</em><span>&nbsp;</span>版本。</p><p>如果你的压缩目标是 ES6:</p><pre><code>yarn add git://github.com/mishoo/UglifyJS2<span spellcheck=\"true\">#harmony --dev</span>\n</code></pre><p>如果你的压缩目标是 ES5:</p><pre><code>yarn add uglify-js --dev\n</code></pre><p>然后配置如下:</p><pre><code><span>const</span> UglifyJSPlugin <span>=</span> <span>require</span><span>(</span><span>'uglifyjs-webpack-plugin'</span><span>)</span><span>;</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  entry<span>:</span> <span>{</span><span>.</span><span>.</span><span>.</span><span>}</span><span>,</span>\n  output<span>:</span> <span>{</span><span>.</span><span>.</span><span>.</span><span>}</span><span>,</span>\n  module<span>:</span> <span>{</span><span>.</span><span>.</span><span>.</span><span>}</span><span>,</span>\n  plugins<span>:</span> <span>[</span>\n    <span>new</span> <span>UglifyJSPlugin</span><span>(</span><span>)</span>\n  <span>]</span>\n<span>}</span><span>;</span>\n</code></pre><p>就是这样了!</p><h3>选项</h3><p>这个插件支持 UglifyJS 的功能，如下所述:</p><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>compress</td><td>boolean, object</td><td>true</td><td>见<span>&nbsp;</span><a href=\"http://lisperator.net/uglifyjs/compress\" target=\"_blank\">UglifyJS 文档</a>。</td></tr><tr><td>mangle</td><td>boolean, object</td><td>true</td><td>见下节.</td></tr><tr><td>beautify</td><td>boolean</td><td>false</td><td>美化输出。</td></tr><tr><td>output</td><td>一个提供 UglifyJS<span>&nbsp;</span><a href=\"https://github.com/mishoo/UglifyJS2/blob/master/lib/output.js\" target=\"_blank\">OutputStream</a><span>&nbsp;</span>选项的对象</td><td></td><td>更底层地访问 UglifyJS 输出。</td></tr><tr><td>comments</td><td>boolean, RegExp, function(astNode, comment) -&gt; boolean</td><td>默认保存包含<span>&nbsp;</span><code>/*!</code>,<span>&nbsp;</span><code>/**!</code>,<span>&nbsp;</span><code>@preserve</code><span>&nbsp;</span>or<span>&nbsp;</span><code>@license</code><span>&nbsp;</span>的注释</td><td>注释相关的配置</td></tr><tr><td>sourceMap</td><td>boolean</td><td>false</td><td>使用 SourceMaps 将错误信息的位置映射到模块。这会减慢编译的速度。</td></tr><tr><td>test</td><td>RegExp, Array<regexp></regexp></td><td><code>/.js($|\\?)/i</code></td><td>测试匹配的文件</td></tr><tr><td>include</td><td>RegExp, Array<regexp></regexp></td><td></td><td>只测试包含的文件。</td></tr><tr><td>exclude</td><td>RegExp, Array<regexp></regexp></td><td></td><td>要从测试中排除的文件。</td></tr></tbody></table><h3>Mangling</h3><p><code>mangle.props (boolean|object)</code><span>&nbsp;</span>- 传递 true 或者一个对象可以启用并提供 UglifyJS mangling 属性选项 - 参考有关 mangleProperties 选项的<span>&nbsp;</span><a href=\"https://github.com/mishoo/UglifyJS2#mangleproperties-options\" target=\"_blank\">UglifyJS 文档</a>。</p><blockquote><p>注意：UglifyJS 警告，<a href=\"https://github.com/mishoo/UglifyJS2#mangling-property-names---mangle-props\" target=\"_blank\">如果你使用 mangling 属性，你可能会破坏你的 source</a>，所以如果你不确定你为什么需要这个特性，你最好不要使用它！你可以按如下方式调整行为：</p></blockquote><pre><code><span>new</span> <span>UglifyJsPlugin</span><span>(</span><span>{</span>\n  mangle<span>:</span> <span>{</span>\n    <span spellcheck=\"true\">// 跳过这些</span>\n    except<span>:</span> <span>[</span><span>'$super'</span><span>,</span> <span>'$'</span><span>,</span> <span>'exports'</span><span>,</span> <span>'require'</span><span>]</span>\n  <span>}</span>\n<span>}</span><span>)</span></code></pre>"}}