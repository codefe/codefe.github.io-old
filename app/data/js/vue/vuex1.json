{"sta":1,"data":{"subTitle":"同级action如何互相调用","content":"<p>Action 通常是异步的，那么如何知道 action 什么时候结束呢？更重要的是，我们如何才能组合多个 action，以处理更加复杂的异步流程？</p><p>首先，你需要明白&nbsp;<code>store.dispatch</code>&nbsp;可以处理被触发的 action 的处理函数返回的 Promise，并且&nbsp;<code>store.dispatch</code>&nbsp;仍旧返回 Promise：</p><pre><code>actions: {\n  actionA ({ commit }) {\n    return new Promise((resolve, reject) =&gt; {\n      setTimeout(() =&gt; {\n        commit('someMutation')\n        resolve()\n      }, 1000)\n    })\n  },\n  actionB ({ dispatch, commit }) {\n    return dispatch('actionA').then(() =&gt; {\n      commit('someOtherMutation')\n    })\n  }\n}</code></pre><p>最后，如果我们利用&nbsp;<a href=\"https://tc39.github.io/ecmascript-asyncawait/\" target=\"_blank\" rel=\"noopener noreferrer\">async / await<svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path><polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg></a>，我们可以如下组合 action：<br></p><pre><code>// 假设 getData() 和 getOtherData() 返回的是 Promise\n\nactions: {\n  async actionA ({ commit }) {\n    commit('gotData', await getData())\n  },\n  async actionB ({ dispatch, commit }) {\n    await dispatch('actionA') // 等待 actionA 完成\n    commit('gotOtherData', await getOtherData())\n  }\n}</code></pre><p>一个&nbsp;<code>store.dispatch</code>&nbsp;在不同模块中可以触发多个 action 函数。在这种情况下，只有当所有触发函数完成后，返回的 Promise 才会执行。<br></p>"}}