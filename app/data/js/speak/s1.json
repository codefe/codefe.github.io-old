{"sta":1,"data":{"subTitle":"文本合成语音","content":"<p>现代浏览器默认已经提供了声音功能：</p><pre><code>var speechSU = new window.SpeechSynthesisUtterance();\nspeechSU.text = '你好，世界！';\nwindow.speechSynthesis.speak(speechSU);</code></pre><p>复制到浏览器控制台看看能不能听到声音呢？(需要 Chrome 33+、Firefox 49+ 或 IE-Edge)</p><p>利用一下两个 API 即可：\n<br><h4>SpeechSynthesisUtterance 用于语音合成</h4>lang : 语言 Gets and sets the language of the utterance.\n<br>pitch : 音高 Gets and sets the pitch at which the utterance will be spoken at.\n<br>rate : 语速 Gets and sets the speed at which the utterance will be spoken at.\n<br>text : 文本 Gets and sets the text that will be synthesised when the utterance is spoken.\n<br>voice : 声音 Gets and sets the voice that will be used to speak the utterance.\n<br>volume : 音量 Gets and sets the volume that the utterance will be spoken at.\n<br>onboundary : 单词或句子边界触发，即分隔处触发 Fired when the spoken utterance reaches a word or sentence boundary.\n<br>onend : 结束时触发 Fired when the utterance has finished being spoken.\n<br>onerror : 错误时触发 Fired when an error occurs that prevents the utterance from being succesfully spoken.\n<br>onmark : Fired when the spoken utterance reaches a named SSML \"mark\" tag.\n<br>onpause : 暂停时触发 Fired when the utterance is paused part way through.\n<br>onresume : 重新播放时触发 Fired when a paused utterance is resumed.\n<br>onstart : 开始时触发 Fired when the utterance has begun to be spoken.\n<h4>SpeechSynthesis : 用于朗读</h4>paused : Read only 是否暂停 A Boolean that returns true if the SpeechSynthesis object is in a paused state.\n<br>pending : Read only 是否处理中 A Boolean that returns true if the utterance queue contains as-yet-unspoken utterances.\n<br>speaking : Read only 是否朗读中 A Boolean that returns true if an utterance is currently in the process of being spoken — even if SpeechSynthesis is in a paused state.\n<br>onvoiceschanged : 声音变化时触发\n<br>cancel() : 情况待朗读队列 Removes all utterances from the utterance queue.\n<br>getVoices() : 获取浏览器支持的语音包列表 Returns a list of SpeechSynthesisVoice objects representing all the available voices on the current device.\n<br>pause() : 暂停 Puts the SpeechSynthesis object into a paused state.\n<br>resume() : 重新开始 Puts the SpeechSynthesis object into a non-paused state: resumes it if it was already paused.\n<br>speak() : 读合成的语音，参数必须为 SpeechSynthesisUtterance的实例 Adds an utterance to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.\n<br><br>详细 api 和说明可参考:</p><p>MDN - SpeechSynthesisUtterance\n<br>MDN - SpeechSynthesis&nbsp;</p><p><br></p><p>我们可以直接使用了 speakText(text) 和 stopSpeak() 两个方法来触发语音的朗读和停止：</p><pre><code>var speaker = new window.SpeechSynthesisUtterance();\nvar speakTimer,\n    stopTimer;\n// 开始朗读\nfunction speakText(text) {\n    clearTimeout(speakTimer);\n    window.speechSynthesis.cancel();\n    speakTimer = setTimeout(function () {\n        speaker.text = text;\n        window.speechSynthesis.speak(speaker);\n    }, 200);\n}\n// 停止朗读\nfunction stopSpeak() {\n    clearTimeout(stopTimer);\n    clearTimeout(speakTimer);\n    stopTimer = setTimeout(function () {\n        window.speechSynthesis.cancel();\n    }, 20);\n}</code></pre><p>因为语音合成本来是个异步的操作，因此在过程中进行以上处理。\n<br>\n<br>现代浏览器已经内置了这个功能，两个 API 接口兼容性如下：\n<br>\n<br>Feature\tChrome\tEdge\tFirefox (Gecko)\tInternet Explorer\tOpera\tSafari\n<br>(WebKit) Basic\tsupport 33\t(Yes)\t49 (49)\tNo support\t?&nbsp;<br>如果要兼容其他浏览器或者需要一种完美兼容的解决方案，可能就需要服务端完成了，根据给定文本，返回相应语音即可，百度语音 http://yuyin.baidu.com/docs 就提供这样的服务。</p>"}}