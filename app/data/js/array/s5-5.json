{"sta":1,"data":{"subTitle":"数组操作(创建、元素删除、数组的拷贝)","content":"<p>这篇文章主要介绍了javascript数组操作，包括创建、元素的访问、元素删除、数组的拷贝等操作，还有其它示例&nbsp;</p><p>1、数组的创建</p><pre><code>var arrayObj = new Array();　//创建一个数组\nvar arrayObj = new Array([size]);　//创建一个数组并指定长度，注意不是上限，是长度\nvar arrayObj = new Array([element0[, element1[, ...[, elementN]]]]);　创建一个数组并赋值</code></pre><p>要说明的是，虽然第二种方法创建数组指定了长度，但实际上所有情况下数组都是变长的，也就是说即使指定了长度为5，仍然可以将元素存储在规定长度以外的，注意：这时长度会随之改变。\n<br>2、数组的元素的访问</p><pre><code>var testGetArrValue=arrayObj[1]; //获取数组的元素值\narrayObj[1]= \"这是新值\"; //给数组元素赋予新的值</code></pre><p>3、数组元素的添加</p><pre><code>arrayObj. push([item1 [item2 [. . . [itemN ]]]]);// 将一个或多个新元素添加到数组结尾，并返回数组新长度\narrayObj.unshift([item1 [item2 [. . . [itemN ]]]]);// 将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度\narrayObj.splice(insertPos,0,[item1[, item2[, . . . [,itemN]]]]);//将一个或多个新元素插入到数组的指定位置，插入位置的元素自动后移，返回\"\"。</code></pre><p>4、数组元素的删除</p><pre><code>arrayObj.pop(); //移除最后一个元素并返回该元素值\narrayObj.shift(); //移除最前一个元素并返回该元素值，数组中元素自动前移\narrayObj.splice(deletePos,deleteCount); //删除从指定位置deletePos开始的指定数量deleteCount的元素，数组形式返回所移除的元素</code></pre><p>5、数组的截取和合并</p><pre><code>arrayObj.slice(start, [end]); //以数组的形式返回数组的一部分，注意不包括 end 对应的元素，如果省略 end 将复制 start 之后的所有元素\narrayObj.concat([item1[, item2[, . . . [,itemN]]]]); //将多个数组（也可以是字符串，或者是数组和字符串的混合）连接为一个数组，返回连接好的新的数组</code></pre><p>6、数组的拷贝</p><pre><code>arrayObj.slice(0); //返回数组的拷贝数组，注意是一个新的数组，不是指向\narrayObj.concat(); //返回数组的拷贝数组，注意是一个新的数组，不是指向</code></pre><p>7、数组元素的排序</p><pre><code>arrayObj.reverse(); //反转元素（最前的排到最后、最后的排到最前），返回数组地址\narrayObj.sort(); //对数组元素排序，返回数组地址</code></pre><p>8、数组元素的字符串化</p><pre><code>arrayObj.join(separator); //返回字符串，这个字符串将数组的每一个元素值连接在一起，中间用 separator 隔开。</code></pre><p>toLocaleString 、toString 、valueOf：可以看作是join的特殊用法，不常用</p><p><br></p><p>&nbsp;<br></p>"}}