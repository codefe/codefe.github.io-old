{"sta":1,"data":{"subTitle":"删除数组重复元素的方法汇总","content":"<p>本文实例讲述了javascript删除数组重复元素的方法。分享给大家供大家参考。具体分析如下：</p><p></p><p>这里分享一个前端面试高频题，主要实现javascript删除数组重复元素。希望对初学者有所帮助</p><pre><code>//数组去重的方法\nArray.prototype.unique=function(){\n  //集中声明变量\n  var\n   oldArr=this,\n   newArr=[oldArr[0]],\n   len=oldArr.length,\n   i=1;\n  //过滤空数组\n  if(!len) return this;\n  //过滤重复元素\n  for(;i&lt;len;i++){\n    newArr.indexOf(oldArr[i])&lt;0 ? newArr.push(_this) : ''; \n  }\n  //返回过滤后的数组没有影响原数组\n  return newArr;\n}\nvar arr=['a','a','b','a','c','d'];\nconsole.log(arr.unique());\n//[\"a\", \"b\", \"c\", \"d\", unique: function]</code></pre><p>虽然网上也有很多而且自己写的也不咋地，但是毕竟自己写的逻辑清楚以后还可以顺着逻辑扩展比如扩展到对象元素去重或者是可以同时操作多个数组等等这里再放上别人的写的几个方法可以综合比较下\n<br>方法1：</p><pre><code>function oSort(arr)\n{\n  var result ={};\n  var newArr=[];\n  for(var i=0;i\n  {\n if(!result[arr[i]])\n {\n   newArr.push(arr[i])\n   result[arr[i]]=1\n }\n  }\n  return newArr\n}</code></pre><p>方法2：\n<br>遍历要删除的数组arr， 把元素分别放入另一个数组tmp中，在判断该元素在arr中不存在才允许放入tmp中\n<br>用到两个函数：for ...in 和 indexOf()</p><pre><code>var student = ['qiang'，'ming'，'tao'，'li'，'liang'，'you'，'qiang'，'tao'];\n function unique(arr){\n   // 遍历arr，把元素分别放入tmp数组(不存在才放)\n   var tmp = new Array();\n   for(var i in arr){\n  //该元素在tmp内部不存在才允许追加\n  if(tmp.indexOf(arr[i])==-1){\n  }\n }\n  return tmp;\n}</code></pre><p>方法3：\n<br>把目标数组arr的元素值和键的位置调换 自动就把重复的元素给删除掉了，调换后的样子：array('qiang'=&gt;1，'ming'=&gt;1，'tao'=&gt;1)</p><pre><code>var student = ['qiang','ming','tao','li','liang','you','qiang','tao'];\n  function unique(arr){\n    var tmp = new Array();\n    for(var m in arr){\n      tmp[arr[m]]=1;\n    }\n    //再把键和值的位置再次调换\n    var tmparr = new Array();\n    for(var n in tmp){\n     tmparr.push(n);\n    }\n   return tmparr;\n }</code></pre><p>方法4</p><pre><code>/**\n* 去除数组重复元素\n*/\nfunction uniqueArray(data){ \n  data = data || []; \n  var a = {}; \n  for (var i=0; i&lt;data.length; i++) { \n    var v = data[i]; \n    if (typeof(a[v]) == 'undefined'){ \n      a[v] = 1; \n    } \n  }; \n  data.length=0; \n  for (var i in a){ \n    data[data.length] = i; \n  } \n  return data; \n}</code></pre><p>方法都差不多第三个方法想法还是蛮高明的~</p>"}}