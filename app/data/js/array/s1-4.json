{"sta":1,"data":{"subTitle":"自定义数组排序方法","content":"<p>本文实例讲述了JavaScript自定义数组排序方法。分享给大家供大家参考。具体分析如下：</p><p>Array中有自带的排序功能，这个使用起来比较方便，我们有一点必须清楚，就是排序的依据，如果sort不传入参数的话，那就是按照字符编码（Unicode编码）的顺序排序。</p><pre><code>var a=[\"3\",\"2\",\"1\"]; \nconsole.log(a[0].charCodeAt(0)); // 51 \nconsole.log(a[1].charCodeAt(0)); // 50 \nconsole.log(a[2].charCodeAt(0)); // 49 \nconsole.log(a.sort());      // [\"1\", \"2\", \"3\"] \n  \nvar a=[\"3\",\"你\",\"他\"]; \nconsole.log(a[0].charCodeAt(0)); // 51 \nconsole.log(a[1].charCodeAt(0)); // 20320 \nconsole.log(a[2].charCodeAt(0)); // 20182 \nconsole.log(a.sort());      // [\"3\", \"他\", \"你\"] \n  \nvar a=[\"3\",\"11\",\"222\"]; \nconsole.log(a.sort());// [\"11\", \"222\", \"3\"]  \n           // 多个字符的时候按照第一个字符的编码</code></pre><p>不过我觉得sort最好用的地方在于可以自定义排序，这个在实际运用中也比较常见，比如要对对象数组排序。例如线面的一个对象数组，要根据其中的某一个字段进行排序，当然自己也可以写个函数来完成，不过我想没有sort来得方便。</p><pre><code>var list = [ \n  { \n    max:3, \n    avg:2, \n    min:1 \n  }, \n  { \n    max:10, \n    avg:15, \n    min:20 \n  }, \n  { \n    max:8, \n    avg:5, \n    min:2 \n  } \n]; \n// 根据max字段对list对象进行排序，从小到大的顺序 \n// x,y就是要比较的数组的单个元素，这里就是list中的一个元素 \n// 排序方法主要是要提供一个比较大小的规则，换句话说也就是要说明谁大谁小 \n// 返回值为true or false \nfunction sortByField(x, y) { \n  return x.max - y.max; \n} \nconsole.log(list.sort(sortByField));</code></pre><p>运行效果如下图所示：</p><img src=\"/app/data/js/array/img/1.png\" style=\"max-width:100%;\"><p><img src=\"/app/data/js/arrar/img/1.png\" style=\"max-width:100%;\"></p>"}}