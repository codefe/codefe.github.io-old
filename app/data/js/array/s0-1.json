{"sta":1,"data":{"subTitle":"数组的4个遍历方法","content":"<p></p><h3><span style=\"font-weight: normal;\">Array.forEach()</span></h3><p><code>.forEach()</code>&nbsp;方法能够方便的让你&nbsp;<strong>遍历数组里的每个元素</strong>，你可以在回调函数里对每个元素进行操作。<code>.forEach()</code>方法没有返回值，你不需要在回调函数里写<code>return</code>，这是无意义的。&nbsp;</p><pre><code>var animals = ['dog', 'cat', 'mouse'];<br>\nanimals.forEach(function(item){\n    console.log(item);\n});</code></pre><h3>Array.map()</h3><p>.map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的。</p><p><font color=\"#c24f4a\">如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。</font></p><pre><code>var numbers = [2, 4, 6, 8];\n\nvar doubleNums = numbers.map(function(element) {\n    return element * 2;\n});\n\nconsole.log('doubleNums: ', doubleNums)</code></pre><h3>Array.filter()</h3><p>.filter() 方法能够 过滤掉数组中的某些元素，你可以在回调函数里设定条件，不符合条件的元素都会排除在外。</p><pre><code>var scores = [3, 12, 5, 23, 19, 7];\n\nvar topScores = scores.filter(function(item){\n    if (item &gt; 10){\n        return true;\n    } else {\n        return false;\n    }\n});\n\nconsole.log('topScores: ', topScores);</code></pre><h3>Array.every()</h3><p>.every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false。</p><p><font color=\"#c24f4a\">如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便。</font></p><pre><code>var ages = [23, 19, 32, 44];\n\nvar olderThan18 = ages.every(function(element) {\n    return element &gt; 18;\n});\n\nconsole.log('olderThan18: ', olderThan18);</code></pre><p><br></p>"}}