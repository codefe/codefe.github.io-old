{"sta":1,"data":{"subTitle":"数组的排序、乱序和搜索实现代码","content":"<p>JavaScript中实现数组的排序、乱序和搜索，其实所有这些功能，用一个sort()就可以完成了&nbsp;</p><p>1. 排序： \n<br></p><p>默认的sort()按字符编码排序的：</p><pre><code>var testArray=[3,324,5345,6546,134,5654,665]; \ntestArray.sort(); \nalert(testArray);</code></pre><p>现在要让它按照数值大小排序：</p><pre><code>var testArray=[3,324,5345,6546,134,5654,665]; \ntestArray.sort(function(a,b){return a-b;}); \nalert(testArray);</code></pre><p>只要传递一个比较函数给sort就可以了，如果比较函数的值小于0，则表示a必须出现在b前面，否则在b后面。 \n<br>\n<br>2. 乱序： \n<br>让比较函数随机传回-1或1就可以了：</p><pre><code>var testArray=[1,2,3,4,5,6,7,8,9,10,22,33,55,77,88,99]; \ntestArray.sort(function(){return Math.random()&gt;0.5?-1:1;}); \nalert(testArray);</code></pre><p>3. 搜索： \n<br>\n<br>用sort()来玩搜索还蛮新鲜的，呵呵，看看是怎么玩的吧。 \n<br>我现在要把数组里含有字母'a'的元素全部找出来，如果没有sort()，似乎只能用遍历了，遍历的效率…那个叫恐怖啊！！具体做法如下：</p><pre><code>var testArray=['df', 'rtr', 'wy', 'dafd', 'dfs', 'wefa', 'tyr', 'rty', 'rty', 'ryt', 'afds', 'wer', 'te']; \ntestArray.sort(function(a,b){return a.indexOf('a')==-1?1:-1;}); \nalert(testArray);</code></pre><p>这样就把数组中含有字母'a'的元素全部放到数组前面啦，再经过一些简单的处理，就可以输出搜索结果了。 \n<br>以上是我总结的三种在javascript中用sort()操作数组的方法，如果你有兴趣，你会发现sort()还有好多妙用呢……</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;<br></p>"}}