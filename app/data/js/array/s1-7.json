{"sta":1,"data":{"subTitle":"数组的排序 sort()方法和reverse()方法","content":"<p>JavaScript提供了sort()方法和reverse()方法，使得我们可以简单的对数组进行排序操作和逆序操作&nbsp;</p><p>其中： \n<br>\n<br>1.JavaScript的sort()中如果没有指定比较函数，则默认会按照字符的编码顺序进行升序排序。也就是说如果我们想要对数值进行排序得到的不一定是我们想要的结果。 \n<br>\n<br>2.Javascript的reverse()将数组中的元素逆序。 \n<br>\n<br>先看看上面的第一点，如果有一个数组arr=[1,6,3,7,9]，使用arr.sort()后，数组的顺序为1,3,6,7,9，得到了我们想要的结果。 \n<br>\n<br>再看看下面的一个数组排序：arr=[3,1,16,34,30],如果执行arr.sort()后是不是还是会得到我们想要的1,3,16,30,34呢？ \n<br>\n<br>执行后我们发现结果为：1,16,3,30,34，显然结果不是我们想要的。实际上，sort方法将上面的数值按照字符串方式排序了，也就是说和数组arr1=['3','1','16','34','30']的排序结果一致。 \n<br>\n<br></p><p>代码如下：</p><pre><code>var arr=[3,1,16,34,30]; \nvar arr1=['3','1','16','34','30']; \nalert(arr.sort()); // 1,16,3,30,34 \nalert(arr1.sort()); // 1,16,3,30,34</code></pre><p>那么如果我们想要得到正确的结果：1,3,16,30,34 应该怎么去做呢？ \n<br>\n<br>查询javascript手册，手册中的说明如下： \n<br>\n<br>定义和用法 \n<br>\n<br>sort() 方法用于对数组的元素进行排序。 \n<br>\n<br>语法 \n<br>\n<br>arrayObject.sort(sortby)参数 描述 \n<br>sortby 可选。规定排序顺序。必须是函数。 \n<br>\n<br>返回值 \n<br>\n<br>对数组的引用。请注意，数组在原数组上进行排序，不生成副本。 \n<br>\n<br>说明 \n<br>\n<br>如果调用该方法时没有使用参数，将按字母顺序对数组中的元素进行排序，说得更精确点，是按照字符编码的顺序进行排序。要实现这一点，首先应把数组的元素都转换成字符串（如有必要），以便进行比较。 \n<br>\n<br>如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。比较函数应该具有两个参数 a 和 b，其返回值如下： \n<br>\n<br>若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。 \n<br>若 a 等于 b，则返回 0。 \n<br>若 a 大于 b，则返回一个大于 0 的值。 \n<br>===================================== \n<br>\n<br>由以上说明我们可以了解到，如果要按照数值进行排序，那么就要提供一个比较函数。一般常见的比较函数如下：</p><pre><code>function sortArr(m,n){ \nif(m&lt;n) \nreturn -1;//小于，返回-1 \nelse if(m&gt;n) \nreturn 1;//大于，返回1 \nelse return 0;//等于，返回0 \n}</code></pre><p>精简后可以写成如下两种形式：</p><pre><code>function sortArr(m,n){ \n    return m-n; \n}</code></pre><pre><code>function sortArr(m,n){ \n    return m&gt;n?1:(m&lt;n?-1:0); \n}</code></pre><p>然后执行arr.sort(sortArr)，发现可以得到我们想要的结果：1,3,16,30,34.也就说将数组按照整型数值进行了升序排序。 \n<br>这样的话新的问题就来了，如果我们想要对数组进行降序排序怎么做呢？ \n<br>\n<br>有一思路就是改变sortArr函数的返回值，如果m&lt;n时返回正直，m&gt;n时返回负值，m=n时返回0。这样就可以了。 \n<br>\n<br>你可以写两个函数，一个升序，一个降序。然后根据不同的需要调用不同的函数就可以了。 \n<br>\n<br>此外我们还可以调用上面提到的另一个函数reverse()来轻松的实现，当我们进行升序排序后，然后数组在调用reverse()方法将数组逆序，这样就可以实现数组的降序排序了。 \n<br>\n<br>代码如下：</p><blockquote>arr.sort(sortArr).reverse();</blockquote><p>总结：这里主要介绍了Javascript中数组的排序，由于默认按照字符串排序，要实现按照其他形式的规则排序就要自己定义比较函数了。&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;<br></p>"}}