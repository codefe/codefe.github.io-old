{"sta":1,"data":{"subTitle":"数组对象增加和删除元素方法总结","content":"<p>这篇文章主要介绍了JavaScript数组Array对象增加和删除元素方法,实例总结了pop方法、push方法、splice方法、concat方法等的使用技巧&nbsp;</p><p>本文实例总结了JavaScript数组Array对象增加和删除元素方法。分享给大家供大家参考。具体分析如下：\n<br>pop 方法\n<br>移除数组中的最后一个元素并返回该元素。\n<br>arrayObj.pop( )\n<br>必选的 arrayObj 引用是一个 Array 对象。\n<br>说明\n<br>如果该数组为空，那么将返回 undefined。\n<br>shift 方法\n<br>移除数组中的第一个元素并返回该元素。\n<br>arrayObj.shift( )\n<br>必选的 arrayObj 引用是一个 Array 对象。\n<br>说明\n<br></p><p>shift 方法可移除数组中的第一个元素并返回该元素。</p><pre><code>var arr = new Array(0,1,2,3,4);  \nvar remove = arr.pop();  \nalert(remove);  \nalert(arr.length);</code></pre><p>移除并返回最后一个元素，先弹出 4 ，然后提示目前数组长度 弹出 4 ！\n<br> \n<br>push 方法\n<br>将新元素添加到一个数组中，并返回数组的新长度值。\n<br>arrayObj.push([item1 [item2 [. . . [itemN ]]]])\n<br>参数\n<br>arrayObj\n<br>必选项。一个 Array 对象。\n<br>item, item2,. . . itemN\n<br>可选项。该 Array 的新元素。\n<br>说明\n<br>push 方法将以新元素出现的顺序添加这些元素。如果参数之一为数组，那么该数组将作为单个元素添加到数组中。如果要合并两个或多个数组中的元素，请使用 concat 方法。</p><pre><code>var arr = new Array(0,1,2,3,4);  \n// 参数是一个或多个  \nvar len = arr.push(5,6);  \n//len = arr.push(7);  \nfor(var i=0;i&lt;arr.length;i++){  \n    alert(arr[i]);  \n}</code></pre><p>可以一次性增加多个进去，也可以增加一个，返回数组目前长度。变了打印数组内容观察变化！\n<br>splice 方法\n<br>从一个数组中移除一个或多个元素，如果必要，在所移除元素的位置上插入新元素，返回所移除的元素。\n<br>arrayObj.splice(start, deleteCount, [item1[, item2[, . . . [,itemN]]]])\n<br>参数\n<br>arrayObj\n<br>必选项。一个 Array 对象。\n<br>start\n<br>必选项。指定从数组中移除元素的开始位置，这个位置是从 0 开始计算的。\n<br>deleteCount\n<br>必选项。要移除的元素的个数。\n<br>item1, item2,. . .,itemN\n<br>必选项。要在所移除元素的位置上插入的新元素。\n<br>说明\n<br>splice 方法可以移除从 start 位置开始的指定个数的元素并插入新元素，从而修改 arrayObj。返回值是一个由所移除的元素组成的新 Array 对象。</p><pre><code>var arr = new Array(0,1,2,3,4);  \n// 删除从2开始的两个元素，位置从0开始  \n// 返回移除元素的数组  \nvar reArr = arr.splice(2,2);  \n// 可以在移除元素的位置替换新的元素进去  \n//只是从移除开始位置进行增加新元素，如果你移除两个元素，你完全可以增加10个新元素进去  \n//var reArr = arr.splice(2,2,6,7,8,9);  \nfor(var i=0;i&lt;arr.length;i++){  \n    alert(arr[i]);  \n}</code></pre><p>如果你不想增加新的元素进去，那么不要传递第三个参数即可！\n<br>concat 方法 (Array)\n<br>返回一个新数组，这个新数组是由两个或更多数组组合而成的。\n<br>array1.concat([item1[, item2[, . . . [, itemN]]]])\n<br>参数\n<br>array1 \n<br>必选项。其他所有数组要进行连接的 Array 对象。 \n<br>item1,. . ., itemN\n<br>可选项。要连接到 array1 末尾的其他项目。\n<br>说明\n<br>concat 方法返回一个 Array 对象，其中包含了 array1 和提供的任意其他项目的连接。\n<br>要加的项目（item1 … itemN）会按照从左到右的顺序添加到数组。如果某一项为数组，那么添加其内容到 array1 的末尾。如果该项目不是数组，就将其作为单个的数组元素添加到数组的末尾。\n<br>以下为从源数组复制元素到结果数组：\n<br>对于从正被连接到新数组的数组中复制的对象参数，复制后仍然指向相同的对象。不论新数组和源数组中哪一个有改变，都将引起另一个的改变。 \n<br>对于连接到新数组的数值或字符串，只复制其值。一个数组中值有改变并不影响另一个数组中的值。</p><pre><code>var arr = new Array(0,1);  \nvar arr2 = new  Array(3,4);  \nvar arr = arr.concat(arr2);  \nfor(var i=0;i&lt;arr.length;i++){  \n    alert(arr[i]);  \n}</code></pre><p>方法的作用是将arr2中的元素复制到了arr中！</p><p>&nbsp;<br></p>"}}