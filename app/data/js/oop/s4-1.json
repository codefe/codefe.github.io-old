{"sta":1,"data":{"subTitle":"抽象","content":"<p>在构造器中 throw new Error(''); 抛异常。这样防止这个类被直接调用。&nbsp;&nbsp;<br></p><pre><code>function DetectorBase() {\n  throw new Error('Abstract class can not be invoked directly!');\n}\n \nDetectorBase.prototype.detect = function() {\n  console.log('Detection starting...');\n};\nDetectorBase.prototype.stop = function() {\n  console.log('Detection stopped.');\n};\nDetectorBase.prototype.init = function() {\n  throw new Error('Error');\n};\n \n// var d = new DetectorBase();// Uncaught Error: Abstract class can not be invoked directly!\n \nfunction LinkDetector() {}\nLinkDetector.prototype = Object.create(DetectorBase.prototype);\nLinkDetector.prototype.constructor = LinkDetector;\n \nvar l = new LinkDetector();\nconsole.log(l); //LinkDetector {}__proto__: LinkDetector\nl.detect(); //Detection starting...\nl.init(); //Uncaught Error: Error</code></pre><p><br></p>"}}