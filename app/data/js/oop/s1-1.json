{"sta":1,"data":{"subTitle":"浅拷贝","content":"<pre><code>var Person = {\n  name: 'allin',\n  age: 18,\n  address: {\n    home: 'home',\n    office: 'office',\n  }\n  sclools: ['x','z'],\n};\n \nvar programer = {\n  language: 'js',\n};\n \nfunction extend(p, c){\n  var c = c || {};\n  for( var prop in p){\n    c[prop] = p[prop];\n  }\n}\nextend(Person, programer);\nprogramer.name; // allin\nprogramer.address.home; // home\nprogramer.address.home = 'house'; //house\nPerson.address.home; // house</code></pre><p>从上面的结果看出，浅拷贝的缺陷在于修改了子对象中引用类型的值，会影响到父对象中的值，因为在浅拷贝中对引用类型的拷贝只是拷贝了地址，指向了内存中同一个副本。</p>"}}