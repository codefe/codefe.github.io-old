{"sta":1,"data":{"subTitle":"封装及其利弊","content":"<h3>什么是封装&nbsp;</h3><p>封装就是把一个对象保护起来，使其只提供定义的接口方法，而保护私有的变量。打个比方，游戏中的一个人物对象，它的经验只有通过打死怪兽这个接口方法来增加。如果可以直接修改经验就会直接影响到整个游戏的设定。所以这个时候经验这个属性就是一个需要保护的变量。\n&nbsp;</p><h3>封装之利&nbsp;</h3><p>封装保护了私有属性，不用担心这些属性会被接口以外的方法以外的修改。更好的解耦。实现迪米特法则（最少知道原则）（Demeter Principle）&nbsp;\n</p><h3>封装之弊&nbsp;</h3><p>私有方法无法做单元测试，只能对共有方法做单元测试，单元测试用例的设计可能需要对共有方法的覆盖增加保证覆盖越多的私有方法。灵活性降低。对需要封装的对象做很好的理解才能实现别人调用时候需要的接口可以被获取。</p>"}}