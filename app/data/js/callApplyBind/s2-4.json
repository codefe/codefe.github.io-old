{"sta":1,"data":{"subTitle":"apply的一些其他巧妙用法","content":"<p>（1）Math.max 可以实现得到数组中最大的一项：</p><div>　　　　因为Math.max不支持Math.max([param1,param2])也就是数组，但是它支持Math.max(param1,param2...)，所以可以根据apply的特点来解决 var max=Math.max.apply(null,array)，这样就轻易的可以得到一个数组中的最大项（apply会将一个数组转换为一个参数接一个参数的方式传递给方法）</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 这块在调用的时候第一个参数给了null，这是因为没有对象去调用这个方法，我只需要用这个方法帮我运算，得到返回的结果就行，所以直接传递了一个null过去。</div><div>　　　 用这种方法也可以实现得到数组中的最小项：Math.min.apply(null,array)</div><div>（2）Array.prototype.push可以实现两个数组的合并</div><div>　　　同样push方法没有提供push一个数组，但是它提供了push(param1,param2...paramN)，同样也可以用apply来转换一下这个数组，即：</div><div><div>&nbsp;　　&nbsp; 1.var arr1=new Array(\"1\",\"2\",\"3\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2.var arr2=new Array(\"4\",\"5\",\"6\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.Array.prototype.push.apply(arr1,arr2); &nbsp; &nbsp;//得到合并后数组的长度，因为push就是返回一个数组的长度</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 也可以这样理解，arr1调用了push方法，参数是通过apply将数组转换为参数列表的集合</div><div>&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span><strong>通常在什么情况下，可以使用apply类似Math.max等之类的特殊用法：</strong></span></div><div><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</strong>一般在目标函数只需要n个参数列表，而不接收一个数组的形式，可以通过apply的方式巧妙地解决这个问题。</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br></div><img src=\"/app/data/js/callApplyBind/img/1.png\" style=\"max-width:100%;\"><div>　　　</div></div>"}}