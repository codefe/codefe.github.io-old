{"sta":1,"data":{"subTitle":"apply","content":"<p>语法：apply([thisObj[,argArray]]) \n<br>定义：应用某一对象的一个方法，用另一个对象替换当前对象。 \n<br>说明： \n<br>如果 argArray 不是一个有效的数组或者不是 arguments 对象，那么将导致一个 TypeError。 \n<br>如果没有提供 argArray 和 thisObj 任何一个参数，那么 Global 对象将被用作 thisObj， 并且无法被传递任何参数。</p><p>注意如果call和apply的第一个参数写的是null，那么this指向的是window对象</p><p><br></p><p>apply：应用某一对象的一个方法，用另一个对象替换当前对象。例如：B.apply(A, arguments);即A对象应用B对象的方法。&nbsp;</p><p>apply：最多只能有两个参数——新this对象和一个数组argArray。如果给该方法传递多个参数，则把参数都写进这个数组里面，当然，即使只有一个参数，也要写进数组里。如果argArray不是一个有效的数组或arguments对象，那么将导致一个TypeError。如果没有提供argArray和thisObj任何一个参数，那么Global对象将被用作thisObj，并且无法被传递任何参数。</p><h3>&nbsp;示例:</h3><pre><code>var a = {\n  user:\"追梦子\",\n  fn:function(){\n    console.log(this.user); //追梦子\n  }\n}\nvar b = a.fn;\nb.apply(a);</code></pre><p>同样apply也可以有多个参数，但是不同的是，第二个参数必须是一个数组，如下：</p><pre><code>var a = {\n  user:\"追梦子\",\n  fn:function(e,ee){\n    console.log(this.user); //追梦子\n    console.log(e+ee); //11\n  }\n}\nvar b = a.fn;\nb.apply(a,[10,1]);</code></pre><p>或者</p><pre><code>var a = {\n  user:\"追梦子\",\n  fn:function(e,ee){\n    console.log(this.user); //追梦子\n    console.log(e+ee); //520\n  }\n}\nvar b = a.fn;\nvar arr = [500,20];\nb.apply(a,arr);\n \n \n//注意如果call和apply的第一个参数写的是null，那么this指向的是window对象</code></pre><pre><code>var a = {\n  user:\"追梦子\",\n  fn:function(){\n    console.log(this); //Window {external: Object, chrome: Object, document: document, a: Object, speechSynthesis: SpeechSynthesis…}\n  }\n}\nvar b = a.fn;\nb.apply(null);</code></pre><p><br></p>"}}