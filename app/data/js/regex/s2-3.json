{"sta":1,"data":{"subTitle":"确定重复出现","content":"<p>到现在为止，你已经知道如何去匹配一个字母或数字，但更多的情况下，可能要匹配一个单词或一组数字。一个单词有若干个字母组成，一组数字有若干个单数组成。跟在字符或字符簇后面的花括号({})用来确定前面的内容的重复出现的次数。</p><table><tbody><tr><th width=\"20%\">字符簇</th><th width=\"80%\">描述</th></tr><tr><td>^[a-zA-Z_]$</td><td>所有的字母和下划线</td></tr><tr><td>^[[:alpha:]]{3}$</td><td>所有的3个字母的单词</td></tr><tr><td>^a$</td><td>字母a</td></tr><tr><td>^a{4}$</td><td>aaaa</td></tr><tr><td>^a{2,4}$</td><td>aa,aaa或aaaa</td></tr><tr><td>^a{1,3}$</td><td>a,aa或aaa</td></tr><tr><td>^a{2,}$</td><td>包含多于两个a的字符串</td></tr><tr><td>^a{2,}</td><td>如：aardvark和aaab，但apple不行</td></tr><tr><td>a{2,}</td><td>如：baad和aaa，但Nantucket不行</td></tr><tr><td>\\t{2}</td><td>两个制表符</td></tr><tr><td>.{2}</td><td>所有的两个字符</td></tr></tbody></table><p>这些例子描述了花括号的三种不同的用法。一个数字<span>&nbsp;</span><span>{x}<span>&nbsp;</span></span>的意思是<strong>前面的字符或字符簇只出现x次</strong><span>&nbsp;</span>；一个数字加逗号<span>&nbsp;</span><span>{x,}</span><span>&nbsp;</span>的意思是<strong>前面的内容出现x或更多的次数</strong><span>&nbsp;</span>；两个数字用逗号分隔的数字<span>&nbsp;</span><span>{x,y}</span><span>&nbsp;</span>表示<span>&nbsp;</span><strong>前面的内容至少出现x次，但不超过y次</strong>。我们可以把模式扩展到更多的单词或数字：</p><pre><span>^[</span><span>a</span><span>-</span><span>zA</span><span>-</span><span>Z0</span><span>-</span><span>9</span><span>_</span><span>]{</span><span>1</span><span>,}</span><span>$      </span><span>// 所有包含一个以上的字母、数字或下划线的字符串 </span><span>\n</span><span>^[</span><span>1</span><span>-</span><span>9</span><span>][</span><span>0</span><span>-</span><span>9</span><span>]{</span><span>0</span><span>,}</span><span>$        </span><span>// 所有的正整数 </span><span>\n</span><span>^</span><span>\\-</span><span>{</span><span>0</span><span>,</span><span>1</span><span>}[</span><span>0</span><span>-</span><span>9</span><span>]{</span><span>1</span><span>,}</span><span>$      </span><span>// 所有的整数 </span><span>\n</span><span>^[-]?[</span><span>0</span><span>-</span><span>9</span><span>]+</span><span>\\.</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]+</span><span>$   </span><span>// 所有的浮点数</span></pre><p>最后一个例子不太好理解，是吗？这么看吧：以一个可选的负号 (<span>[-]?</span>) 开头 (<span>^</span>)、跟着1个或更多的数字(<span>[0-9]+</span>)、和一个小数点(<span>\\.</span>)再跟上1个或多个数字<span>([0-9]+</span>)，并且后面没有其他任何东西(<span>$</span>)。下面你将知道能够使用的更为简单的方法。</p><p>特殊字符<span>&nbsp;</span><span>?</span><span>&nbsp;</span>与<span>&nbsp;</span><span>{0,1}</span><span>&nbsp;</span>是相等的，它们都代表着：<span>&nbsp;</span><strong>0个或1个前面的内容</strong><span>&nbsp;</span>或<span>&nbsp;</span><strong>前面的内容是可选的</strong><span>&nbsp;</span>。所以刚才的例子可以简化为：</p><pre><span>^</span><span>\\-</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]{</span><span>1</span><span>,}</span><span>\\.</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]{</span><span>1</span><span>,}</span><span>$</span></pre><p>特殊字符<span>&nbsp;</span><span>*</span><span>&nbsp;</span>与<span>&nbsp;</span><span>{0,}</span><span>&nbsp;</span>是相等的，它们都代表着<span>&nbsp;</span><strong>0 个或多个前面的内容</strong><span>&nbsp;</span>。最后，字符<span>&nbsp;</span><span>+</span><span>&nbsp;</span>与<span>&nbsp;</span><span>{1,}</span><span>&nbsp;</span>是相等的，表示<span>&nbsp;</span><strong>1 个或多个前面的内容</strong><span>&nbsp;</span>，所以上面的4个例子可以写成：</p><pre><span>^[</span><span>a</span><span>-</span><span>zA</span><span>-</span><span>Z0</span><span>-</span><span>9</span><span>_</span><span>]+</span><span>$      </span><span>// 所有包含一个以上的字母、数字或下划线的字符串 </span><span>\n</span><span>^[</span><span>1</span><span>-</span><span>9</span><span>][</span><span>0</span><span>-</span><span>9</span><span>]*</span><span>$        </span><span>// 所有的正整数 </span><span>\n</span><span>^</span><span>\\-</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]+</span><span>$          </span><span>// 所有的整数 </span><span>\n</span><span>^</span><span>\\-</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]+</span><span>\\.</span><span>?[</span><span>0</span><span>-</span><span>9</span><span>]*</span><span>$ </span><span>// 所有的浮点数</span></pre><p>当然这并不能从技术上降低正规表达式的复杂性，但可以使它们更容易阅读。</p>"}}