{"sta":1,"data":{"subTitle":"定位符","content":"<p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p><p>定位符用来描述字符串或单词的边界，<span>^</span><span>&nbsp;</span>和<span>&nbsp;</span><span>$</span><span>&nbsp;</span>分别指字符串的开始与结束，<span>\\b</span><span>&nbsp;</span>描述单词的前或后边界，<span>\\B</span><span>&nbsp;</span>表示非单词边界。</p><p>正则表达式的定位符有：</p><table><tbody><tr><th width=\"20%\">字符</th><th width=\"80%\">描述</th></tr><tr><td>^</td><td>匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \\n 或 \\r 之后的位置匹配。</td></tr><tr><td>$</td><td>匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \\n 或 \\r 之前的位置匹配。</td></tr><tr><td>\\b</td><td>匹配一个字边界，即字与空格间的位置。</td></tr><tr><td>\\B</td><td>非字边界匹配。</td></tr></tbody></table><p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如<span>&nbsp;</span><span>^*</span><span>&nbsp;</span>之类的表达式。</p><p>若要匹配一行文本开始处的文本，请在正则表达式的开始使用<span>&nbsp;</span><span>^</span><span>&nbsp;</span>字符。不要将<span>&nbsp;</span><span>^</span><span>&nbsp;</span>的这种用法与中括号表达式内的用法混淆。</p><p>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用<span>&nbsp;</span><span>$</span><span>&nbsp;</span>字符。</p><p>若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：</p><pre><span>/^Chapter [1-9][0-9]{0,1}/</span></pre><p>真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它即出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。</p><pre><span>/^Chapter [1-9][0-9]{0,1}$/</span></pre><p>匹配字边界稍有不同，但向正则表达式添加了很重要的能力。字边界是单词和空格之间的位置。非字边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现字边界后面：</p><pre><span>/\\bCha/</span></pre><p><span>\\b</span><span>&nbsp;</span>字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在字边界的前面：</p><pre><span>/ter\\b/</span></pre><p>下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：</p><pre><span>/\\Bapt/</span></pre><p>字符串 apt 出现在单词 Chapter 中的非字边界处，但出现在单词 aptitude 中的字边界处。对于<span>&nbsp;</span><span>\\B</span><span>&nbsp;</span>非字边界运算符，位置并不重要，因为匹配不关心究竟是单词的开头还是结尾。</p>"}}