{"sta":1,"data":{"subTitle":"浮点数乘积运算出现多位小数的解决方法","content":"<p>这篇文章主要介绍了Javascript浮点数乘积运算出现多位小数的解决方法,需要的朋友可以参考下&nbsp;</p><p>Javascript在进行浮点数的乘积运算，会出现多位小数的情况。 \n<br>\n<br>这是由于在运算的时候先把浮点数转化成二进制后进行运算，但是有的小数在二进制编码后出现无限循环，因而导致计算出现了误差，在其它变成语言中也有类似的问题。 \n<br>\n<br>原因解释参考自百度知道： \n<br>\n<br>例如：求1038.1-1000 \n<br>1038.1=10000001110.0001100110011001100110011001100110011001100..... \n<br>1000 =1111101000 \n<br>\n<br>1038.1转化为二进制是个无限循环小数，1100是循环节，只能取近似值，误差就是这里产生的 如果浏览器版本高，可以用toFixed() 方法可把 Number 四舍五入为指定小数位数的数字。 \n<br>\n<br></p><p>解决方案：根据要保留的小数位数（如4），在计算乘积的时候先乘以（10^4），然后对计算结果除以（10^4），最后对结果取近似值Math.round</p><p>代码如下:</p><pre><code>var m1 = 2232.00, \npercent = (10/100), \ntotal = percent*m1; \nalert(total);//223.20000000000002 \n\ntotal = Math.round(total*10)/10; \nalert(total);//223.2</code></pre><p><br></p><p>&nbsp;<br></p>"}}