{"sta":1,"data":{"subTitle":"闭包的作用是什么","content":"<p>闭包常常用来「间接访问一个变量」。换句话说，「隐藏一个变量」。</p><p><!--StartFragment-->假设我们在做一个游戏，在写其中关于「还剩几条命」的代码。</p><p>如果不用闭包，你可以直接用一个全局变量：</p><div><pre><code>window.lives = 30 // 还有三十条命\n</code></pre></div><p>这样看起来很不妥。万一不小心把这个值改成 -1 了怎么办。所以我们不能让别人「直接访问」这个变量。怎么办呢？</p><p>用局部变量。</p><p>但是用局部变量别人又访问不到，怎么办呢？</p><p>暴露一个访问器（函数），让别人可以「间接访问」。代码如下：</p><div><pre><code>!function(){\n\n  var lives = 50\n\n  window.奖励一条命 = function(){\n    lives += 1\n  }\n\n  window.死一条命 = function(){\n    lives -= 1\n  }\n\n}()\n</code></pre></div><p>简明起见，我用了中文 :)</p><p>那么在其他的 JS 文件，就可以使用 window.奖励一条命() 来涨命，使用 window.死一条命() 来让角色掉一条命。</p><p>看到闭包在哪了吗？</p><p><img src=\"https://pic4.zhimg.com/v2-89bf8b72fb612a1e2f348ed0b3e0689f_b.png\" data-rawwidth=\"743\" data-rawheight=\"410\" width=\"743\" data-original=\"https://pic4.zhimg.com/v2-89bf8b72fb612a1e2f348ed0b3e0689f_r.png\" data-actualsrc=\"https://pic4.zhimg.com/v2-89bf8b72fb612a1e2f348ed0b3e0689f_b.png\"><br></p><h3>闭包到底是什么？</h3><p><br>五年前，我也被这个问题困扰，于是去搜了 stackoverflow 并总结下来。你在百度搜闭包，那篇《JavaScript闭包——懂不懂由你，反正我是懂了》就是我写的。当时我还是新手，一直不理解为什么大家口中的闭包这么模糊、这么琢磨不定呢。</p><p>我们重新来审视一下闭包的代码：</p><p><img src=\"https://pic4.zhimg.com/v2-2d16967becf2df18358d62a84d0595e7_b.png\" data-rawwidth=\"689\" data-rawheight=\"394\" width=\"689\" data-original=\"https://pic4.zhimg.com/v2-2d16967becf2df18358d62a84d0595e7_r.png\" data-actualsrc=\"https://pic4.zhimg.com/v2-2d16967becf2df18358d62a84d0595e7_b.png\">第一句是变量声明，第二句是函数声明，第三句是 console.log。</p><p>每一句我都学过，为什么合起来我就看不出来是闭包？</p><p>我告诉你答案，你根本不需要知道闭包这个概念，一样可以使用闭包！</p><p>闭包是 JS 函数作用域的副产品。</p><p>换句话说，正是由于 JS 的函数内部可以使用函数外部的变量，所以这段代码正好符合了闭包的定义。而不是 JS 故意要使用闭包。</p><p>很多编程语言也支持闭包，另外有一些语言则不支持闭包。</p><p>只要你懂了 JS 的作用域，你自然而然就懂了闭包，即使你不知道那就是闭包！</p><h3><span style=\"font-weight: normal;\">所谓闭包的作用</span></h3><p>如果我们在写代码时，根本就不知道闭包，只是按照自己的意图写，最后，发现满足了闭包的定义。</p><p>那么请问，这算是闭包的作用吗？</p><p>这个问题，留给你思考。</p><h3>关于闭包的谣言</h3><p>闭包会造成内存泄露？</p><p>错。</p><p>说这话的人根本不知道什么是内存泄露。内存泄露是指你用不到（访问不到）的变量，依然占居着内存空间，不能被再次利用起来。</p><p>闭包里面的变量明明就是我们需要的变量（lives），凭什么说是内存泄露？</p><p>这个谣言是如何来的？</p><p>因为 IE。IE 有 bug，IE 在我们使用完闭包之后，依然回收不了闭包里面引用的变量。</p><p>这是 IE 的问题，不是闭包的问题。参见司徒正美的<a href=\"http://www.cnblogs.com/rubylouvre/p/3345294.html\" target=\"_blank\">这篇文章</a>。</p><h3>一个小经验</h3><p>编程界崇尚以简洁优雅唯美，很多时候</p><p><!--EndFragment--></p><p><b><u>如果你觉得一个概念很复杂，那么很可能是你理解错了。</u></b></p>"}}