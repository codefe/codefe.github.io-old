{"sta":1,"data":{"subTitle":"导入(@import)","content":"<h3>导入</h3><p>Stylus支持字面<span>@import</span><span>&nbsp;</span>CSS, 也支持其他Stylus样式的动态导入。</p><h3>字面CSS</h3><p>任何<code>.css</code>扩展的文件名将作为字面量。例如：</p><blockquote>@import \"reset.css\"</blockquote><p>渲染如下：</p><blockquote>@import \"reset.css\"</blockquote><h3>Stylus导入</h3><p>当使用<span>@import</span>没有<code>.css</code>扩展，会被认为是Stylus片段（如：<code>@import \"mixins/border-radius\"</code>）。</p><p><span>@import</span>工作原理为：遍历目录队列，并检查任意目录中是否有该文件（类似node的<code>require.paths</code>）。该队列默认为单一路径，从<code>filename</code>选项的<code>dirname</code>衍生而来。 因此，如果你的文件名是<code>/tmp/testing/stylus/main.styl</code>，导入将显现为<code>/tmp/testing/stylus/</code>。</p><p><span>@import</span>也支持索引形式。这意味着当你<code>@import blueprint</code>, 则会理解成<code>blueprint.styl</code>或<code>blueprint/index.styl</code>. 对于库而言，这很有用，既可以展示所有特征与功能，同时又能导入特征子集。</p><p>如下很常见的库结构：</p><pre><code>./tablet\n  |-- index.styl \n  |-- vendor.styl \n  |-- buttons.styl \n  |-- images.styl</code> </pre><p>下面这个例子中，我们设置<code>paths</code>选项用来为Stylus提供额外路径。在<code>./test.styl</code>中，我们可以<code>@import \"mixins/border-radius\"</code>或<code>@import \"border-radius\"</code>（因为<code>./mixins<span>&nbsp;</span></code>暴露给了Stylus）。</p><blockquote>  <span>/**\n   * 依赖模块\n   */<br></span><span>   * 依赖模块<br></span><span>   */<br><br></span>\n  var stylus = require('../')<br>&nbsp;&nbsp;&nbsp;&nbsp;, str = require('fs').readFileSync(__dirname + '/test.styl', 'utf8');<br><br>\n  var paths = [<br>      &nbsp;&nbsp;&nbsp;&nbsp;__dirname<br>    &nbsp;&nbsp;&nbsp;&nbsp;, __dirname + '/mixins'<br>  ];<br>\n  stylus(str)<br>    &nbsp;&nbsp;&nbsp;&nbsp;.set('filename', __dirname + '/test.styl')<br>    &nbsp;&nbsp;&nbsp;&nbsp;.set('paths', paths)<br>    &nbsp;&nbsp;&nbsp;&nbsp;.render(function(err, css){<br>      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (err) throw err;<br>      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(css);<br>    &nbsp;&nbsp;&nbsp;&nbsp;});</blockquote><h3>JavaScript导入API</h3><p>当使用<code>.import(path)</code>方法，这些导入是被推迟的，直到赋值。</p><pre><code>var stylus = require('../')\n  , str = require('fs').readFileSync(__dirname + '/test.styl', 'utf8');\n\nstylus(str)\n  .set('filename', __dirname + '/test.styl')\n  .import('mixins/vendor')\n  .render(function(err, css){\n  if (err) throw err;\n  console.log(css);\n});</code></pre><p>下面语句：</p><blockquote>@import 'mixins/vendor'</blockquote><p>等同于：</p><p><!--StartFragment--><!--EndFragment--></p><blockquote>.import('mixins/vendor')</blockquote>"}}