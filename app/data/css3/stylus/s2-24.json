{"sta":1,"data":{"subTitle":"连接中间件(Connect Middleware)","content":"<h3>连接中间件</h3><p>有了连接中间件，无论Stylus片段什么时候改变，这些片段都能够自动编译。</p><h6>stylus.middleware(options)</h6><h3>选项</h3><p>返回给定<code>options</code>下的连接中间件。</p><pre><code>`serve`     Serve the stylus files from `dest` [true]\n`force`     Always re-compile\n`src`       Source directory used to find .styl files\n`dest`      Destination directory used to output .css files\n            when undefined defaults to `src`.\n`compile`   Custom compile function, accepting the arguments\n           `(str, path)`.\n`compress`  Whether the output .css files should be \n            compressed\n`firebug`   Emits debug infos in the generated css that can\n            be used by the FireStylus Firebug plugin\n`linenos`   Emits comments in the generated css indicating \n            the corresponding stylus line</code></pre><p>上面中文翻译如下：</p><pre><code>`serve`     从 `dest` 提供stylus文件 [true]\n`force`     总是重新编译\n`src`       资源目录用来查找 .styl 文件\n`dest`      `src`默认为undefined时，用来输出 .css 文件的目标目录\n`compile`   自定义编译函数，接受参数`(str, path)`.\n`compress`  是否输出的 .css 文件要被压缩\n`firebug`   生成的CSS中发出调试信息，可被Firebug插件FireStylus使\n            用\n`linenos`   生成的CSS中发出注解，表明响应的stylus行</code></pre><h3>例子</h3><p>从<code>./public</code>提供<code>.styl</code>文件。</p><blockquote>var app = connect();<br>app.middleware(__dirname + '/public');</blockquote><p>改变<code>src</code>以及<code>dest</code>项来修改<code>.styl</code>文件哪里被加载，哪里被保存。</p><pre><code>var app = connect();\n\napp.middleware({\n  src: __dirname + '/stylesheets',\n  dest: __dirname + '/public'\n});</code></pre><p>这里我们建立自定义的编译函数，这样，我们就能设置<code>compress</code>项，或是定义附加的函数。</p><p>默认情况下，编译函数是简单地设置<code>filename</code>以及渲染CSS. 在下面这个例子中，我们压缩输出内容，使用\"nib\"库插件，以及自动导入。</p><pre><code>function compile(str, path) {\n  return stylus(str)\n    .set('filename', path)\n    .set('compress', true)\n    .use(nib())\n    .import('nib');\n}</code></pre><p>作为选项传递应该像这样：</p><p><!--StartFragment--><!--EndFragment--></p><pre><code>var app = connect();\n\napp.middleware({\n    src: __dirname\n  , dest: __dirname + '/public'\n  , compile: compile\n})</code></pre>"}}