{"sta":1,"data":{"subTitle":"迭代(Iteration)","content":"<h3>迭代</h3><p>Stylus允许你通过<code>for/in</code>对表达式进行迭代形式如下：</p><blockquote>for &lt;val-name&gt; [, &lt;key-name&gt;] in &lt;expression&gt;</blockquote><p>例如：</p><pre><code>body\n  for num in 1 2 3\n    foo num</code></pre><p>生成：</p><pre><code>body {\n  foo: 1;\n  foo: 2;\n  foo: 3;\n}</code></pre><p>下面这个例子演示了如何使用<code>&lt;key-name&gt;</code>：</p><pre><code>body\n  fonts = Impact Arial sans-serif\n  for font, i in fonts\n    foo i font</code></pre><p>生成为：</p><pre><code>body {\n  foo: 0 Impact;\n  foo: 1 Arial;\n  foo: 2 sans-serif;\n}</code></pre><h3>混合书写(Mixins)</h3><p>我们可以在混写中使用循环实现更强大的功能，例如，我们可以把表达式对作为使用插值和循环的属性。</p><p>下面，我们定义<code>apply()</code>, 利用所有的<code>arguments</code>，这样逗号分隔以及表达式列表都会支持。</p><pre><code>apply(props)\n  props = arguments if length(arguments) &gt; 1\n  for prop in props\n    {prop[0]} prop[1]\n\nbody\n  apply(one 1, two 2, three 3)\n\nbody\n  list = (one 1) (two 2) (three 3)\n  apply(list)</code></pre><h3>函数(Functions)</h3><p>Stylus函数同样可以包含for循环。下面就是简单使用示例：</p><p>求和：</p><blockquote>sum(nums)<br>  &nbsp;&nbsp;&nbsp;&nbsp;sum = 0<br>  &nbsp;&nbsp;&nbsp;&nbsp;for n in nums<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum += n<br><br>\nsum(1 2 3)<br><span>// =&gt; 6</span></blockquote><p>连接：</p><blockquote>join(delim, args)<br>  &nbsp;&nbsp;&nbsp;&nbsp;buf = ''<br>  &nbsp;&nbsp;&nbsp;&nbsp;for arg, index in args<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if index<br>      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf += delim + arg<br>    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buf += arg<br><br>\njoin(', ', foo bar baz)<br><span>// =&gt; \"foo, bar, baz\"</span></blockquote><h3>后缀(Postfix)</h3><p>就跟<code>if</code>/<code>unless</code>可以利用后面语句一样，<code>for</code>也可以。如下后缀解析的例子：</p><pre><code>sum(nums)\n  sum = 0\n  sum += n for n in nums\n\njoin(delim, args)\n  buf = ''\n  buf += i ? delim + arg : arg for arg, i in args</code></pre><p>我们也可以从循环<span><font color=\"#c24f4a\">返回</font></span>，下例子就是<code>n % 2 == 0</code>为<code>true</code>的时候返回数值。</p><p><!--StartFragment--><!--EndFragment--></p><blockquote>first-even(nums)<br>  &nbsp;&nbsp;&nbsp;&nbsp;return n if n % 2 == 0 for n in nums<br><br>\nfirst-even(1 3 5 5 6 3 2)<br><span>// =&gt; 6</span></blockquote>"}}