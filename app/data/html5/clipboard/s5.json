{"sta":1,"data":{"subTitle":"回顾","content":"<p>在引入异步剪贴板 API 之前，我们在 Web 浏览器中混合了不同的复制和粘贴实现。</p><p></p><p>在大多数浏览器中，可以使用<span>&nbsp;</span><code>document.execCommand('copy')</code><span>&nbsp;</span>和触发浏览器自己的复制和粘贴<span>&nbsp;</span><code>document.execCommand('paste')</code>。如果要复制的文本是不存在于 DOM 中的字符串，我们必须将其插入到 DOM 中并选择它：</p><pre><code>button.addEventListener('click', e =&gt; {\n  const input = document.createElement('input');\n  document.body.appendChild(input);\n  input.value = text;\n  input.focus();\n  input.select();\n  const result = document.execCommand('copy');\n  if (result === 'unsuccessful') {\n    console.error('Failed to copy text.');\n  }\n})</code></pre><p>同样，以下是您如何在不支持新的 Async Clipboard API 的浏览器中处理粘贴的内容：\n<br>\n<br>出自：https://github.com/justjavac/the-front-end-knowledge-you-may-not-know/issues/23</p><pre><code>document.addEventListener('paste', e =&gt; {\n  const text = e.clipboardData.getData('text/plain');\n  console.log('Got pasted text: ', text);\n})</code></pre><p>在 Internet Explorer 中，我们也可以通过 window.clipboardData 访问剪贴板。如果在用户手势内进行访问（例如点击事件） – 以负责任的方式请求权限的一部分 – 则不显示权限提示。</p><p><br></p>"}}