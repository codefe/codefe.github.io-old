{"sta":1,"data":{"subTitle":"html5中video标签的总结","content":"<p>video标签的书写：<br>&lt;video src=\"http://115.29.3.178/1.mp4\" poster=\"video/video1.jpg\"&nbsp;&nbsp;controls&nbsp;&nbsp;width=\"100%\"&nbsp;&nbsp;id=\"myVideo\" autoplay&nbsp;&nbsp;preload&gt;您的浏览器不支持video&lt;/video&gt;<br>其中属性介绍：<br>&nbsp; &nbsp; &nbsp; &nbsp; poster:当视频未响应或缓冲不足时，该属性值链接到一个图像。该图像将以一定比例被显示出来，如果想让图片显示整个窗口，那就让图片足够大就行了。<br>&nbsp; &nbsp; &nbsp; &nbsp; controls:如果出现该属性，则向用户显示控件，比如播放按钮。<br>&nbsp; &nbsp; &nbsp; &nbsp; autoplay:如果出现该属性，则视频在就绪后马上播放。<br>&nbsp; &nbsp; &nbsp; &nbsp; preload:如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性。所以上面的preload可以省略。<br><br>video标签在不同环境下的使用：<br>&nbsp; &nbsp; &nbsp; &nbsp; 第一次使用video是将其放到webview控件内部，在android端是可以支持自动播放的。将video标签放到UIwebview控件,在ios端是不支持自动播放的。（针对webview控件这一方面我本人不是很了解，所以测试的结果也只代表我个人的测试结果，仅供参考）<br>&nbsp; &nbsp; &nbsp; &nbsp; 第二次是直接把video标签放到html页面中使用，添加autoplay标签后的测试结果：<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 在PC端是可以自动播放的，<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 在移动端的android中，QQ浏览器是不支持自动播放，微信里也是不可以的，因为他们都使用的是webkit内核，UC浏览器是支持播放的，查阅资料说uc浏览器的内核是自研的UC内核，但它也是基于webkit内核修改的，uc自称是深度修改，后发力十足。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 在ios端去测试，微信上和safair均不能自动播放。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 如果写一个事件去调用video.play();方法的话也是可以实现自动播放的效果的。<br><br>video标签实现多机位切换后连续播放效果：<br>如图所示：<img border=\"0\" width=\"345\" height=\"531\" src=\"/app/data/html5/video/img/210508aj2gfilh32hc95gj.jpg\"><br><br>实现多机位切换后连续播放的js代码展示：&nbsp;</p><pre><code>var flag;\n\t\tvar old_flag;\n\t\tvar obj;\n\t\tvar current_time;\n\t\t//切换频道\n\t\tfunction changChl(url){\n\t\t\tobj = $(\"#myVideo\")[0];\n\t\t\tcurrent_time = obj.currentTime;\n\t\t\tif(url != obj.src) {\n\t\t\t\t\tobj.currentTime = parseFloat(current_time);\n\t\t\t\t\tvar new_url = url;\n\t\t\t\t\tobj.src = new_url;\n\t\t\t\t\tobj.autoplay = \"true\";\n\t\t\t\t\tcheckduration();\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tfunction checkduration() {\n\t\t\t\tif(4 == obj.readyState) {\n\t\t\t\t\tobj.currentTime=current_time;\n\t\t\t\t\tobj.play();\n\t\t\t\t\tclearInterval(flag);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tflag = setInterval(checkduration,1000);\n\t\t\t\t\t//clearInterval(flag); //解决IOS死循环问题 \n\t\t\t\t}\n\t\t\t}</code></pre><p>在测试的过程中存在的几个关键点：\n<br>        1.obj.play();\n<br>                video标签的play方法，在android端的sumsung s4,小米系列，ios系列，触发事件后均可播放。\n<br>                关于我做的机位切换后连续播放的程序中，添加play,会导致sumsung s4不再支持连续播放，（这个结果仅供参考）；\n<br>\n<br>        2.obj.autoplay();\n<br>                video标签的autoplay属性，在测试过程中sumsung s4是支持这个属性的，但是在小米系列，ios系统均不支持此属性。\n<br>\n<br>        3.obj.readyState();\n<br>                video标签的readyState属性是用来返回媒体当前播放位置的就绪状态，共有5个值。\n<br>                HAVE_NOTHING(数值0)：没有获取到媒休的任何信息，当前播放位置没有可播放数据。\n<br>                HAVE_METADATA（数值1）：已经获取到足够的媒体数据，但是当前播放位置没有有效的媒体数据。\n<br>                HAVE_CURRENT_DATA(数值2)：当前播放的位置已经有数据可以播放，但没有获取到可以让播放器中前进的数据。\n<br>                HAVE_FUTURE_DATA(数值3)：当前播放的位置已经有数据可以播放，而且也获取到了可以让播放器前进的数据，当前及至少下一帧的数据是可用的。\n<br>                HAVE_ENOUGH_DATA(数值4):可用数据足以开始播放.\n<br>\n<br>        4.页面中报错：\n<br>                Uncaught InvalidStateError: Failed to set the 'currentTime' property on 'HTMLMediaElement': The element's readyState is HAVE_NOTHING. \n<br>                错误提示的部分代码：\n<br></p><pre><code>if(url != obj.src) {\n                                        var new_url = url;\n                                        obj.src = new_url;\n                                        obj.autoplay = \"true\";\n                                        obj.currentTime = parseFloat(current_time);\n                                        checkduration();\n                                }</code></pre><p><br></p><p>                解决方案：\n<br></p><pre><code>if(url != obj.src) {\n                                        obj.currentTime = parseFloat(current_time);\n                                        var new_url = url;\n                                        obj.src = new_url;\n                                        obj.autoplay = \"true\";\n                                        checkduration();\n                                }</code></pre><p>                                将obj.currentTime=parseFloat(current_time);上移到最开始\n<br>\n<br>\n<br>        5.判断移动终端是ios还是android\n<br>\n<br></p><pre><code>var browser={\n                    versions:function(){\n                            var u = navigator.userAgent, app = navigator.appVersion;\n                            return {         //移动终端浏览器版本信息\n                                 trident: u.indexOf('Trident') &gt; -1, //IE内核\n                                presto: u.indexOf('Presto') &gt; -1, //opera内核\n                                webKit: u.indexOf('AppleWebKit') &gt; -1, //苹果、谷歌内核\n                                gecko: u.indexOf('Gecko') &gt; -1 &amp;&amp; u.indexOf('KHTML') == -1, //火狐内核\n                                mobile: !!u.match(/AppleWebKit.*Mobile.*/), //是否为移动终端\n                                ios: !!u.match(/(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n                                android: u.indexOf('Android') &gt; -1 || u.indexOf('Linux') &gt; -1, //android终端或uc浏览器\n                                iPhone: u.indexOf('iPhone') &gt; -1 , //是否为iPhone或者QQHD浏览器\n                                iPad: u.indexOf('iPad') &gt; -1, //是否iPad\n                                webApp: u.indexOf('Safari') == -1 //是否web应该程序，没有头部与底部\n                            };\n                         }(),\n                         language:(navigator.browserLanguage || navigator.language).toLowerCase()\n                }</code></pre><p><br></p><p>                alert(\"是否是ios\"+browser.versions.ios+\"***是否是android\"+browser.versions.android+\"*****是否为移动终端\"+browser.versions.mobile);\n<br><br>最后，多机位切换后连续播放的效果没有实现，没有一套完整的代码去兼容所以的手机，因为每一款手机对video的方法和属性支持效果都不一样。\n<br>此调查结果均为个人测试结果，仅供大家参考。</p>"}}