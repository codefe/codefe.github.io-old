{"sta":1,"data":{"subTitle":"Html5 Canvas介绍","content":"<div><div>要在网络上创建的图形应用程序，HTML-5提供了一套丰富的功能，如2D画布，WebGL，SVG，CSS3D变换和SMIL。要编写WebGL的应用程序，我们可以使用HTML-5现有的canvas元素。本章提供了HTML-52D&nbsp;canvas元素的概述。</div></div><div><h3>HTML5 Canvas</h3><div>HTML-5&lt;canvas&gt;提供了一个简单而强大的选项来使用&nbsp;JavaScript&nbsp;绘制图形。它可以用来绘制图形，使照片组合，或做简单的(和不那么简单的)动画。</div><div>这是一个简单的&lt;canvas&gt;元素只有两个特定的属性：width和height，以及所有HTML5元素有核心的属特，例如像：id，name和class。</div><h3>语法</h3><div>HTML画布&lt;canvas&gt;标记的语法如下所示。要提到这些在双引号(“”)画布的名称。</div><pre>&lt;canvas id = \"mycanvas\" width = \"100\" height = \"100\"&gt;&lt;/canvas&gt;\n</pre><h3>Canvas 属性</h3><div>canvas&nbsp;标签有三个属性，即：id,&nbsp;width&nbsp;和&nbsp;height。</div><ul><li><p>Id&nbsp;−&nbsp;ID代表在文档对象模型(DOM)canvas元素的标识符。</p></li><li><p>Width&nbsp;−&nbsp;表示canvas的宽度。</p></li><li><p>Height&nbsp;−&nbsp;表示canvas的高度。</p></li></ul><div>这些属性决定&nbsp;canvas&nbsp;的大小。如果程序员不指定&lt;canvas&gt;标签的大小，那么浏览器如Firefox，Chrome浏览器和Web工具包，默认情况下为canvas元素提供尺寸为300×150。</div><h3>示例 - 创建一个Canvas</h3><div>下面的代码演示了如何创建一个画布(canvas)。我们用CSS来将一个彩色边框添加到画布上。</div><pre>&lt;html&gt;\n   &lt;head&gt;\n\t\n      &lt;style&gt;\n         #mycanvas{border:1px solid red;}\n      &lt;/style&gt;\n\t\t\n   &lt;/head&gt;\n\t\n   &lt;body&gt;\n      &lt;canvas id = \"mycanvas\" width = \"300\" height = \"200\"&gt;&lt;/canvas&gt;\n   &lt;/body&gt;\n\t\n&lt;/html&gt;\n</pre><div>这将产生以下结果&nbsp;-<br><img alt=\"\" src=\"/app/data/html5/webgl/img/1-1512151946232U.png\"></div><h3>HTML Context (渲染)</h3><div>&lt;canvas&gt;最初为空。要canvas元素上显示东西，必须使用的脚本语言。这个脚本语言应该访问渲染上下文，并且绘制就可以了。</div><div>canvas元素有一个DOM方法是&nbsp;getContext()，它被用来获取呈现上下文和它的绘图功能。这个方法有一个参数，上下文 2D 类型。</div><div>下面的代码将被写入，以获得必要的上下文。可以将此脚本写在body标签内，如下图所示。</div><pre>&lt;!DOCTYPE HTML&gt;\n\n&lt;html&gt;\n   &lt;body&gt;\n      &lt;canvas id = \"mycanvas\" width = \"600\" height = \"300\"&gt;&lt;/canvas&gt;\n      \n      &lt;script&gt;\n         var canvas = document.getElementById('mycanvas');\n         var context = canvas.getContext('2d');\n\t\t\t\n         context.font = '20pt Calibri';\n         context.fillStyle = 'green';\n         context.fillText('Welcome to Yiibai Tutorial', 100, 100);\n      &lt;/script&gt;\n      \n   &lt;/body&gt;\n&lt;/html&gt;\n</pre><p>这将产生以下结果&nbsp;-<br><img alt=\"\" src=\"/app/data/html5/webgl/img/1-151215194A1J9.png\"></p><h3>WebGL Context</h3><div>HTML5画布(Canvas)也用于写WebGL的应用程序。要创建canvas元素使用WebGL来渲染，应该可传递&nbsp;experimental-webgl，WebGL，而不是2D到&nbsp;canvas.getContext()方法。有些浏览器只支持“WebGL”。</div><pre>&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n   &lt;canvas id = 'my_canvas'&gt;&lt;/canvas&gt;\n\t\n   &lt;script&gt;\n      var canvas = document.getElementById('my_canvas');\n      var gl = canvas.getContext('experimental-webgl');\n      gl.clearColor(0.9,0.9,0.8,1);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n   &lt;/script&gt;\n\t\n&lt;/html&gt;\n</pre><p>这将产生以下结果&nbsp;-</p></div><p><img alt=\"\" src=\"/app/data/html5/webgl/img/1-151215194GL20.png\"><br></p>"}}